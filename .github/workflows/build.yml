name: Project Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: "java"

      - name: Maven Clean Install
        run: mvn clean install

      - name: Perform CodeQL Security Analysis
        uses: github/codeql-action/analyze@v1

#      - name: Run Postman Collection using Newman
#        run: |
#          docker compose up --build -d
#          mkdir -p postman
#          curl -O postman/weather-service.postman_collection.json https://raw.githubusercontent.com/BytePiston/weather-service/master/postman_collection/weather-service.postman_collection.json
#          curl -O postman/weather-service-env.postman_environment.json https://raw.githubusercontent.com/BytePiston/weather-service/master/postman_collection/weather-service-env.postman_environment.json
#          docker run -t postman/newman:ubuntu run postman/weather-service.postman_collection.json -e postman/weather-service-env.postman_environment.json

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=BytePiston_weather-service

          # generates coverage-report.md and publishes as checkrun
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: target/site/jacoco/jacoco.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 60
          fail_below_threshold: false
          publish_only_summary: false

      # Publish Coverage Job Summary  # Optional
      - name: Add Coverage Job Summary
        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY

      # uploads the coverage-report.md artifact  # Optional
      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report-markdown
          path: ./coverage-results.md
          retention-days: 1

      - name: Get the Coverage info
        run: |
          echo "Total coverage ${{ steps.jacoco.outputs.coverage-overall }}"
          echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"

      - name: Set up Docker and Start the Application
        run: |
          docker compose up --build -d

      - name: Download Postman Collection and Environment
        working-directory: ./app
        run: |
          mkdir -p postman
          curl -O ./app/postman/weather-service.postman_collection.json https://raw.githubusercontent.com/BytePiston/weather-service/master/postman_collection/weather-service.postman_collection.json
          curl -O ./app/postman/weather-service-env.postman_environment.json https://raw.githubusercontent.com/BytePiston/weather-service/master/postman_collection/weather-service-env.postman_environment.json

      - name: Run Postman Collection using Newman
        working-directory: ./app
        run: |
          docker run -t postman/newman:ubuntu run postman/weather-service.postman_collection.json -e ./app/postman/weather-service-env.postman_environment.json

